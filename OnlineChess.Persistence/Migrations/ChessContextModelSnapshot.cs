// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineChess.Persistence;

#nullable disable

namespace OnlineChess.Persistence.Migrations
{
    [DbContext(typeof(ChessContext))]
    partial class ChessContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OnlineChess.Domain.DomainModel.OnlineChessModel.Board", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Player1Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Player2Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Player1Id");

                    b.HasIndex("Player2Id");

                    b.ToTable("Board");
                });

            modelBuilder.Entity("OnlineChess.Domain.DomainModel.OnlineChessModel.Entities.Block", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BlockColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BoardId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PieceId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("XCoordinate")
                        .HasColumnType("bigint");

                    b.Property<long>("YCoordinate")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BoardId");

                    b.HasIndex("PieceId");

                    b.ToTable("Block");
                });

            modelBuilder.Entity("OnlineChess.Domain.DomainModel.OnlineChessModel.Entities.Piece", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("HasMovedSinceStart")
                        .HasColumnType("bit");

                    b.Property<string>("PieceColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PieceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("XCoordinate")
                        .HasColumnType("bigint");

                    b.Property<long>("YCoordinate")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Piece");
                });

            modelBuilder.Entity("OnlineChess.Domain.DomainModel.OnlineChessModel.Entities.Player", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PlayerName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Player");
                });

            modelBuilder.Entity("OnlineChess.Domain.DomainModel.OnlineChessModel.Board", b =>
                {
                    b.HasOne("OnlineChess.Domain.DomainModel.OnlineChessModel.Entities.Player", "Player1")
                        .WithMany()
                        .HasForeignKey("Player1Id");

                    b.HasOne("OnlineChess.Domain.DomainModel.OnlineChessModel.Entities.Player", "Player2")
                        .WithMany()
                        .HasForeignKey("Player2Id");

                    b.Navigation("Player1");

                    b.Navigation("Player2");
                });

            modelBuilder.Entity("OnlineChess.Domain.DomainModel.OnlineChessModel.Entities.Block", b =>
                {
                    b.HasOne("OnlineChess.Domain.DomainModel.OnlineChessModel.Board", null)
                        .WithMany("Blocks")
                        .HasForeignKey("BoardId");

                    b.HasOne("OnlineChess.Domain.DomainModel.OnlineChessModel.Entities.Piece", "Piece")
                        .WithMany()
                        .HasForeignKey("PieceId");

                    b.Navigation("Piece");
                });

            modelBuilder.Entity("OnlineChess.Domain.DomainModel.OnlineChessModel.Board", b =>
                {
                    b.Navigation("Blocks");
                });
#pragma warning restore 612, 618
        }
    }
}
